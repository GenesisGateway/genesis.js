// Generated by CoffeeScript 2.7.0
(function() {
  var BaseRequestApi, Promise, Response;

  Response = require('../response');

  Promise = require('bluebird');

  BaseRequestApi = class BaseRequestApi {
    // Base Network constructor
    constructor() {
      this.responseBody = '';
      this.responseHeaders = {};
      this.responseStatus = 0;
      this.networkConfig = {};
    }

    // Provide Gateway Raw response payload
    getResponseBody() {
      return this.responseBody;
    }

    // Provide Gateway response headers
    getResponseHeaders() {
      return this.responseHeaders;
    }

    // Provide Gateway response HTTP Status Code
    getResponseStatus() {
      return this.responseStatus;
    }

    // Content-Type of the received Response
    getResponseContentType() {
      return '';
    }

    // Prepare Network Configurations based on the Request options
    prepareConfig(requestOptions) {
      return this.networkConfig = requestOptions;
    }

    // Loads the network object by the given gateway response
    initNetwork() {
      throw Error("Init Network method must be implemented in the Network component!");
      return this;
    }

    // Create Network request
    doRequest(httpClient, requestObject) {
      return new Promise((function(resolve, reject) {
        return httpClient(requestObject).then((function(httpResponse) {
          this.initNetwork(httpResponse);
          return resolve(this.initResponse().getResponseObject());
        }).bind(this)).catch((function(errorObject) {
          return reject(this.parseErrorObject(errorObject));
        }).bind(this));
      }).bind(this));
    }

    parseErrorObject(errorObject) {
      if (errorObject.response) {
        this.initNetwork(errorObject.response);
        return {
          status: this.getResponseStatus(),
          message: errorObject.response.statusText,
          response: this.initResponse().getResponseObject()
        };
      }
      if (errorObject.request) {
        return {
          status: errorObject.code,
          message: 'No response received from hostname: ' + errorObject.hostname,
          response: errorObject.response
        };
      }
      return {
        status: 'Unknown',
        message: errorObject.message,
        response: void 0
      };
    }

    // Load the Response with the Network object
    // TODO: Remove Response from the Network
    initResponse() {
      return new Response(this);
    }

  };

  module.exports = BaseRequestApi;

}).call(this);
