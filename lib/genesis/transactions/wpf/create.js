// Generated by CoffeeScript 2.7.0
(function() {
  var AmountValidator, Base, Create, TransactionTypes, _, i18n, util;

  Base = require('../base');

  util = require('util');

  _ = require('underscore');

  AmountValidator = require('../../helpers/validators/amount_validator');

  TransactionTypes = require('../../helpers/transaction/types');

  i18n = require('../../helpers/i18n');

  Create = class Create extends Base {
    constructor(params) {
      super(params);
      // Set Locale
      this.setLocale();
      this.transactionTypes = new TransactionTypes();
      this.i18n = new i18n();
    }

    getTransactionType() {
      return 'wpf_create';
    }

    setLocale() {
      if (this.params && this.params.locale) {
        this.locale = this.params.locale.slice(0, 2);
      } else {
        this.locale = 'en';
      }
      if (this.params) {
        return this.params.locale = this.locale;
      }
    }

    setData(params1) {
      this.params = params1;
      this.setLocale();
      return this;
    }

    getUrl() {
      return {
        app: 'wpf',
        path: util.format('%s/wpf', this.locale)
      };
    }

    getTrxData() {
      // Locale is not inside the request data
      if (this.params) {
        delete this.params.locale;
      }
      return {
        'wpf_payment': _.extend(this.params, {
          'amount': this.currency.convertToMinorUnits(this.params.amount, this.params.currency),
          'transaction_types': {
            transaction_type: _.map(this.params.transaction_types, function(value) {
              var key;
              if (value instanceof Object) {
                for (key in value) {
                  return Object.assign({
                    "@": {
                      name: key.toString()
                    }
                  }, value[key]);
                }
              }
              return {
                "@": {
                  name: value.toString()
                }
              };
            })
          }
        })
      };
    }

  };

  module.exports = Create;

}).call(this);
