// Generated by CoffeeScript 2.7.0
(function() {

  /*
    Genesis SCA(Strong Customer Authentication).
    Services provides the ability to check if a transaction is in the scope of SCA.
  */
  var Request, ScaChecker, _;

  _ = require('underscore');

  Request = require('../../../request');

  ScaChecker = (function() {
    var CHECKER_URL;

    class ScaChecker extends Request {
      // Endpoint JSON POST constructor
      constructor(params, configuration) {
        super(params, configuration, 'json');
      }

      // Transaction type defines used JSON Schema
      getTransactionType() {
        return 'sca_checker';
      }

      // Checker endpoint configuration
      getUrl() {
        return {
          app: 'gate',
          path: CHECKER_URL,
          token: this.configuration.getCustomerToken()
        };
      }

      // API request payload
      getTrxData() {
        var params;
        params = {};
        if (_.isObject(this.params)) {
          params = _.clone(this.params);
        }
        if (!_.isEmpty(params)) {
          params.transaction_amount = Number(this.parseAmount(params));
        }
        return params;
      }

      // Convert amount to minor currency unit
      parseAmount(params) {
        if (params.transaction_amount && params.transaction_currency) {
          return this.currency.convertToMinorUnits(params.transaction_amount, params.transaction_currency);
        }
        return params.transaction_amount;
      }

    };

    CHECKER_URL = 'v1/sca/checker';

    return ScaChecker;

  }).call(this);

  module.exports = ScaChecker;

}).call(this);
