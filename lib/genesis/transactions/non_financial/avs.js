// Generated by CoffeeScript 2.7.0
(function() {
  var Avs, Base, CreditCardValidator, Promise, TransactionTypes, _, config;

  Base = require('../base');

  TransactionTypes = require('../../helpers/transaction/types');

  _ = require('underscore');

  config = require('config');

  CreditCardValidator = require('../../helpers/validators/credit_card_validator');

  Promise = require('bluebird');

  Avs = class Avs extends Base {
    getTransactionType() {
      return TransactionTypes.AVS;
    }

    constructor(params) {
      var creditCardValidator;
      super(params);
      creditCardValidator = new CreditCardValidator();
      this.requiredFields = _.union(['transaction_id', 'billing_address.address1', 'billing_address.zip_code', 'billing_address.city'], creditCardValidator.getCCRequiredFields());
      this.fieldsValues = creditCardValidator.getCCFieldValueFormatValidators();
    }

    getUrl() {
      return {
        app: 'gate',
        path: 'process',
        token: config.customer.token
      };
    }

    getTrxData() {
      return {
        'payment_transaction': _.extend(this.params, {
          'transaction_type': this.getTransactionType()
        })
      };
    }

    send() {
      return Promise.reject('The selected transaction type is deprecated!');
    }

  };

  module.exports = Avs;

}).call(this);
