{
  "$id": "https://genesis.js/definitions/attributes/threeds/v2/threeds_v2",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "threeds_method": {
      "$ref": "/definitions/attributes/threeds/v2/threeds_v2#threeds_method"
    },
    "control": {
      "$ref": "/definitions/attributes/threeds/v2/threeds_v2#control"
    },
    "purchase": {
      "$ref": "/definitions/attributes/threeds/v2/threeds_v2#purchase"
    },
    "merchant_risk": {
      "$ref": "/definitions/attributes/threeds/v2/threeds_v2#merchant_risk"
    },
    "card_holder_account": {
      "$ref": "/definitions/attributes/threeds/v2/threeds_v2#card_holder_account"
    },
    "browser": {
      "$ref": "/definitions/attributes/threeds/v2/threeds_v2#browser"
    },
    "sdk": {
      "$ref": "/definitions/attributes/threeds/v2/threeds_v2#sdk"
    }
  },
  "$defs": {
    "threeds_method": {
      "$id": "/definitions/attributes/threeds/v2/threeds_v2#threeds_method",
      "additionalProperties": false,
      "properties": {
        "callback_url": {
          "$id": "#callback_url",
          "description": "Specific 3DS-Method callback URL after the 3DS-Method completes. The actual status will be provided via HTTP POST to that URL.",
          "$ref": "/definitions/definitions#url"
        }
      }
    },
    "control": {
      "$id": "/definitions/attributes/threeds/v2/threeds_v2#control",
      "additionalProperties": false,
      "properties": {
        "device_type": {
          "$id": "#device_type",
          "description": "Identifies the device channel of the consumer, required in the 3DSv2 authentication protocol.",
          "type": "string"
        },
        "challenge_window_size": {
          "$id": "#challenge_window_size",
          "description": "Identifies the size of the challenge window for the consumer.",
          "type": "string"
        },
        "challenge_indicator": {
          "$id": "#challenge_indicator",
          "description": "The value has weight and might impact the decision whether a challenge will be required for the transaction or not. If not provided, it will be interpreted as no_preference.",
          "type": "string"
        }
      }
    },
    "purchase": {
      "$id": "/definitions/attributes/threeds/v2/threeds_v2#purchase",
      "additionalProperties": false,
      "properties": {
        "category": {
          "#id": "#category",
          "description": "Identifies the type of transaction being authenticated. This field is required in some markets.Accepted values are: goods, service, check_acceptance, account_funding, quasi_cash, prepaid_activation, loan.",
          "type": "string",
          "enum": [
            "goods",
            "service",
            "check_acceptance",
            "account_funding",
            "quasi_cash",
            "prepaid_activation",
            "loan"
          ]
        }
      }
    },
    "merchant_risk": {
      "$id": "/definitions/attributes/threeds/v2/threeds_v2#merchant_risk",
      "additionalProperties": false,
      "properties": {
        "shipping_indicator": {
          "#id": "#shipping_indicator",
          "description": "Indicator code that most accurately describes the shipping method for the cardholder specific transaction. If one or more items are included in the sale, use the Shipping Indicator code for the physical goods. If all digital goods, use the code that describes the most expensive item. Accepted values are: same_as_billing, stored_address, verified_address, pick_up, digital_goods, travel, event_tickets, other.",
          "type": "string",
          "enum": [
            "same_as_billing",
            "stored_address",
            "verified_address",
            "pick_up",
            "digital_goods",
            "travel",
            "event_tickets",
            "other"
          ]
        },
        "delivery_timeframe": {
          "#id": "#delivery_timeframe",
          "description": "Indicates the merchandise delivery timeframe.",
          "type": "string",
          "enum": [
            "electronic",
            "same_day",
            "over_night",
            "another_day"
          ]
        },
        "reorder_items_indicator": {
          "#id": "#reorder_items_indicator",
          "description": "Indicates whether the cardholder is reordering previously purchased merchandise.",
          "type": "string",
          "enum": [
            "first_time",
            "reordered"
          ]
        },
        "pre_order_purchase_indicator": {
          "#id": "#pre_order_purchase_indicator",
          "description": "ndicates whether cardholder is placing an order for merchandise with a future-availability or release date.",
          "type": "string",
          "enum": [
            "merchandise_available",
            "future_availability"
          ]
        },
        "pre_order_date": {
          "#id": "#pre_order_date",
          "description": "For a pre-ordered purchase, the expected date that the merchandise will be available.",
          "$ref": "/definitions/definitions#date-dd-mm-yyyy"
        },
        "gift_card": {
          "#id": "#gift_card",
          "description": "Prepaid or gift card purchase.",
          "type": "string"
        },
        "gift_card_count": {
          "#id": "#gift_card_count",
          "description": "For prepaid or gift card purchase, total count of individual prepaid or gift cards/codes purchased. The value is limited to 99.",
          "type": "integer"
        }
      }
    },
    "card_holder_account": {
      "$id": "/definitions/attributes/threeds/v2/threeds_v2#card_holder_account",
      "additionalProperties": false,
      "properties": {
        "creation_date": {
          "#id": "#creation_date",
          "description": "Date that the cardholder opened the account with the 3DS Requester.",
          "$ref": "/definitions/definitions#date-dd-mm-yyyy"
        },
        "update_indicator": {
          "#id": "#update_indicator",
          "description": "Length of time since the cardholder’s account information with the 3DS Requestor was last changed. Includes Billing or Shipping address, new payment account, or new user(s) added. Accepted values are: current_transaction, less_than_30days, 30_to_60_days, more_than_60days.",
          "enum": [
            "current_transaction",
            "less_than_30days",
            "30_to_60_days",
            "more_than_60days"
          ],
          "type": "string"
        },
        "last_change_date": {
          "#id": "#last_change_date",
          "description": "Date that the cardholder’s account with the 3DS Requestor was last changed. Including Billing or Shipping address, new payment accout, or new user(s) added.",
          "$ref": "/definitions/definitions#date-dd-mm-yyyy"
        },
        "password_change_indicator": {
          "#id": "#password_change_indicator",
          "description": "Length of time since the cardholder account with the 3DS Requestor had a password change or account reset. Accepted values are: no_change, during_transaction, less_than_30days, 30_to_60_days, more_than_60days.",
          "enum": [
            "no_change",
            "during_transaction",
            "less_than_30days",
            "30_to_60_days",
            "more_than_60days"
          ]
        },
        "password_change_date": {
          "#id": "#password_change_date",
          "description": "Date that cardholder’s account with the 3DS Requestor had a password change or account reset.",
          "$ref": "/definitions/definitions#date-dd-mm-yyyy"
        },
        "shipping_address_usage_indicator": {
          "#id": "#shipping_address_usage_indicator",
          "description": "Indicates when the shipping address used for this transaction was first used with the 3DS Requestor. Accepted values are: current_transaction, less_than_30days, 30_to_60_days, more_than_60days.",
          "enum": [
            "current_transaction",
            "less_than_30days",
            "30_to_60_days",
            "more_than_60days"
          ]
        },
        "shipping_address_date_first_used": {
          "#id": "#shipping_address_date_first_used",
          "description": "Date when the shipping address used for this transaction was first used with the 3DS Requestor.",
          "$ref": "/definitions/definitions#date-dd-mm-yyyy"
        },
        "transactions_activity_last_24_hours": {
          "#id": "#transactions_activity_last_24_hours",
          "description": "Number of transactions (successful and abandoned) for this cardholder account with the 3DS Requestor across all payment accounts in the previous 24 hours.",
          "type": [
            "integer",
            "string"
          ]
        },
        "transactions_activity_previous_year": {
          "#id": "#transactions_activity_previous_year",
          "description": "Number of transactions (successful and abandoned) for this cardholder account with the 3DS Requestor across all payment accounts in the previous year.",
          "type": [
            "integer",
            "string"
          ]
        },
        "provision_attempts_last_24_hours": {
          "#id": "#provision_attempts_last_24_hours",
          "description": "Number of Add Card attempts in the last 24 hours.",
          "type": [
            "integer",
            "string"
          ]
        },
        "purchases_count_last_6_months": {
          "#id": "#purchases_count_last_6_months",
          "description": "Number of purchases with this cardholder account during the previous six months.",
          "type": [
            "integer",
            "string"
          ]
        },
        "suspicious_activity_indicator": {
          "#id": "#suspicious_activity_indicator",
          "description": "Indicates whether the 3DS Requestor has experienced suspicious activity (including previous fraud) on the cardholder account. Accepted values are: no_suspicious_observed, suspicious_observed.",
          "enum": [
            "no_suspicious_observed",
            "suspicious_observed"
          ]
        },
        "registration_indicator": {
          "#id": "#registration_indicator",
          "description": "Indicates the length of time that the payment account was enrolled in the cardholder’s account with the 3DS Requester. Accepted values are: guest_checkout, current_transaction, less_than_30days, 30_to_60_days, more_than_60days.",
          "enum": [
            "guest_checkout",
            "current_transaction",
            "less_than_30days",
            "30_to_60_days",
            "more_than_60days"
          ]
        },
        "registration_date": {
          "#id": "#registration_date",
          "description": "Date that the payment account was enrolled in the cardholder’s account with the 3DS Requestor.",
          "$ref": "/definitions/definitions#date-dd-mm-yyyy"
        }
      }
    },
    "browser": {
      "$id": "/definitions/attributes/threeds/v2/threeds_v2#browser",
      "additionalProperties": false,
      "properties": {
        "accept_header": {
          "#id": "#accept_header",
          "description": "The exact content of the HTTP ACCEPT header as sent to the 3DS Requester from the Cardholder browser. Any other header different than the ACCEPT header will be rejected. Example: application/json,text/plain,text/html,*/*.",
          "type": "string",
          "maxLength": 2048
        },
        "java_enabled": {
          "#id": "#java_enabled",
          "description": "Boolean that represents the ability of the cardholder browser to execute Java. The value can be retrieved by accessing a property of the navigator with JavaScript, navigator.javaEnabled.",
          "type": "boolean"
        },
        "language": {
          "#id": "#language",
          "description": "Value representing the browser language as defined in IETF BCP47. Note that only one browser language tag is about to be submitted as per the above IETF BCP47. Numeric chars are also allowed in the subtag and will represent the region.Example: en-GB, zh-guoyu, fil-PH, gsw, es-419, de-1996, etc. The value can be retrieved by accessing a property of the navigator with JavaScript, navigator.language.",
          "type": "string",
          "maxLength": 8
        },
        "color_depth": {
          "#id": "#color_depth",
          "description": "Value representing the browser language as defined in IETF BCP47. Note that only one browser language tag is about to be submitted as per the above IETF BCP47. Numeric chars are also allowed in the subtag and will represent the region.Example: en-GB, zh-guoyu, fil-PH, gsw, es-419, de-1996, etc. The value can be retrieved by accessing a property of the navigator with JavaScript, navigator.language.",
          "enum": [
            "1",
            "4",
            "8",
            "15",
            "16",
            "24",
            "32",
            "48"
          ]
        },
        "screen_height": {
          "#id": "#screen_height",
          "description": "Total height of the Cardholder's screen in pixels. Value is returned from the screen.height property.",
          "tyep": "integer"
        },
        "screen_width": {
          "#id": "#screen_width",
          "description": "Total width of the Cardholder's screen in pixels. Value is returned from the screen.width property.",
          "type": "integer"
        },
        "time_zone_offset": {
          "#id": "#time_zone_offset",
          "description": "Time difference between UTC time and the Cardholder browser local time, in minutes. Note that the offset is positive if the local time zone is behind UTC and negative if it is ahead. If UTC -5 hours then submit 300 or +300, If UTC +2 hours then -120. The value can be retrieved using Javascript getTimezoneOffset() method over Date object.",
          "type": "string",
          "maxLength": 5
        },
        "user_agent": {
          "#id": "#user_agent",
          "description": "Exact content of the HTTP user-agent header.",
          "type": "string,",
          "maxLength": 2048
        }
      }
    },
    "sdk": {
      "$id": "/definitions/attributes/threeds/v2/threeds_v2#sdk",
      "additionalProperties": false,
      "properties": {
        "interface": {
          "#id": "#interface",
          "description": "SDK Interface types that the device of the consumer supports for displaying specific challenge interfaces within the SDK. Accepted values are: native, html, both.",
          "type": "string",
          "maxLength": 6
        },
        "ui_types": {
          "description": "Lists all UI types that the device of the consumer supports for displaying specific challenge interfaces within the SDK.",
          "properties": {
            "ui_type": {
              "#id": "#ui_type",
              "description": "UI type that the device of the consumer supports for displaying specific challenge interface. Accepted values are: text, single_select, multi_select, out_of_bag, other_html.",
              "enum": [
                "text",
                "single_select",
                "multi_select",
                "out_of_bag",
                "other_html"
              ]
            }
          }
        },
        "application_id": {
          "#id": "#application_id",
          "description": "Universally unique ID created upon all installations and updates of the 3DS Requestor APp on a Customer Device. This will be newly generated and stored by the 3DS SDK for each installation or update. The field is limited to 36 characters and it shall have a canonical format as defined in IETF RFC 4122.",
          "type": "string",
          "maxLength": 36
        },
        "encrypted_data": {
          "#id": "#encrypted_data",
          "description": "JWE Object as defined Section 6.2.2.1 containing data encrypted by the SDK for the DS to decrypt. The data will be present when sending to DS, but not present from DS to ACS.",
          "type": "string",
          "maxLength": 64000
        },
        "ephemeral_public_key_pair": {
          "#id": "#ephemeral_public_key_pair",
          "description": "Public key component of the ephemeral key pair generated by the 3DS SDK and used to establish session keys between the 3DS SDK and ACS. In AReq, this data element is contained within the ACS Signed Content JWS Object. The field is limited to maximum 256 characters.",
          "type": "string",
          "maxLength": 256
        },
        "max_timeout": {
          "#id": "#max_timeout",
          "description": "Indicates the maximum amount of time (in minutes) for all exchanges. The field shall have value greater or equals than 05.",
          "type": "integer"
        },
        "reference_number": {
          "#id": "#reference_number",
          "description": "Identifies the vendor and version of the 3DS SDK that is integrated in a 3DS Requestor App, assigned by EMVCo when the 3DS SDK is approved. The field is limited to 32 characters.",
          "type": "string",
          "maxLength": 32
        }
      }
    },
    "recurring": {
      "$id": "/definitions/attributes/threeds/v2/threeds_v2#recurring",
      "additionalProperties": false,
      "properties": {
        "expiration_date": {
          "#id": "#expiration_date",
          "descritpion": "A future date indicating the end date for any further subsequent transactions. For more information, go to 3DSv2 recurring params",
          "$ref": "/definitions/definitions#date-dd-mm-yyyy"
        },
        "frequency": {
          "#id": "#frequency",
          "descritpion": "Indicates the minimum number of days between subsequent transactions. An empty value indicates the payment frequency is not set.",
          "type": [
            "integer",
            "string"
          ]
        }
      }
    }
  }
}

