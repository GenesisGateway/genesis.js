{
  "$id": "https://genesis.js/definitions/definitions",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "minimum": {
      "$id": "#minimum",
      "properties": {
        "transaction_id": {
          "$id": "#transaction_id",
          "description": "Unique transaction id defined by merchant",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "transaction_type": {
          "$id": "#transaction_type",
          "type": "string"
        },
        "remote_ip": {
          "$id": "#remote_ip",
          "description": "IPv4 address of customer",
          "type": "string",
          "format": "ipv4"
        },
        "usage": {
          "$id": "#usage",
          "description": "Description of the transaction for later use",
          "type": "string",
          "title": "Usage"
        }
      }
    },
    "common": {
      "$id": "#common",
      "properties": {
        "customer_email": {
          "$id": "#customer_email",
          "type": "string",
          "format": "email"
        },
        "customer_phone": {
          "$id": "#customer_phone",
          "type": "string",
          "maxLength": 32
        }
      }
    },
    "preauthorization": {
      "$id": "#preauthorization",
      "description": "Signifies whether a preauthorization transaction is performed.",
      "type": "boolean"
    },
    "document_id": {
      "$id": "#document_id",
      "description": "Document ID is consumer personal identification.",
      "type": "string"
    },
    "bank_code": {
      "#id": "#bank_code",
      "description":"Bank codes may vary depending on the gateway configuration",
      "type": "string"
    },
    "fx_rate_id": {
      "$id": "#fx_rate_id",
      "description": "Offers the option to use a specific FX rate to convert the transaction processing amount.",
      "type": "integer"
    },
    "card": {
      "$id": "#card",
      "properties": {
        "card_holder": {
          "$id": "#card_holder",
          "description": "Full name of customer as printed on credit card (first name and last name at least)",
          "type": "string",
          "message": "Expected: full name"
        },
        "card_number": {
          "$id": "#card_number",
          "description": "Complete CC number of customer",
          "type": "string",
          "message": "Expected: number with 13 to 19 digits"
        },
        "cvv": {
          "$id": "#cvv",
          "description": "CVV of CC, requirement is based on terminal configuration",
          "type": "string",
          "message": "Expected: number with 3 to 4 digits"
        },
        "expiration_month": {
          "$id": "#expiration_month",
          "description": "Expiration month as printed on credit card",
          "type": "string",
          "message": "Expected: valid month number (ex: 05)"
        },
        "expiration_year": {
          "$id": "#expiration_year",
          "description": "Expiration year as printed on credit card",
          "type": "string",
          "message": "Expected: valid year number (ex: 2021)"
        },
        "birth_date": {
          "$id": "#birth_date",
          "description": "Birth date of the customer",
          "type": "string",
          "pattern": "^(3[01]|[12][0-9]|0[1-9])-(1[0-2]|0[1-9])-[0-9]{4}$",
          "message":  "Should match pattern dd-mm-yyyy"
        },
        "client_side_encryption": {
          "$id": "#client_side_encryption",
          "description": "Internal attribute used for ignoring the Credit Card fields validations",
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "if": { "properties": { "client_side_encryption": { "enum": [ false ] } } },
          "then": { "properties": { "card_holder": { "pattern": "^(?!^[\\d\\s]*$).+\\s+.+$" } } }
        },
        {
          "if": { "properties": { "client_side_encryption": { "enum": [ false ] } } },
          "then": { "properties": { "card_number": { "pattern": "^[0-9]{13,19}$" } } }
        },
        {
          "if": { "properties": { "client_side_encryption": { "enum": [ false ] } } },
          "then": { "properties": { "expiration_month": { "pattern": "^(0?[1-9]|1[012])$" } } }
        },
        {
          "if": { "properties": { "client_side_encryption": { "enum": [ false ] } } },
          "then": { "properties": { "expiration_year": { "pattern": "^(20)\\d{2}$" } } }
        },
        {
          "if": { "properties": { "client_side_encryption": { "enum": [ false ] } } },
          "then": { "properties": { "cvv": { "pattern": "^[0-9]{3,4}$"} } }
        },
        {
          "if": { "properties": { "token": { "const": false } } },
          "then": { "required": ["card_holder", "card_number", "expiration_year", "expiration_month", "cvv", "currency"] }
        }
      ]
    },
    "subsequent_card": {
      "$id": "#subsequent_card",
      "properties": {
        "card_holder": {
          "$ref": "#card_holder"
        },
        "card_number": {
          "$ref": "#card_number"
        },
        "cvv": {
          "$ref": "#cvv"
        },
        "expiration_month": {
          "$ref": "#expiration_month"
        },
        "expiration_year": {
          "$ref": "#expiration_year"
        },
        "birth_date": {
          "$ref": "#birth_date"
        },
        "client_side_encryption": {
          "$ref": "#client_side_encryption"
        }
      },
      "allOf": [
        {
          "if": { "properties": { "client_side_encryption": { "enum": [ false ] }, "recurring_type": { "enum": [false, "initial", "managed"] } } },
          "then": { "properties": { "card_holder": { "pattern": "^(?!^[\\d\\s]*$).+\\s+.+$" } } }
        },
        {
          "if": { "properties": { "client_side_encryption": { "enum": [ false ] }, "recurring_type": { "enum": [false, "initial", "managed"] } } },
          "then": { "properties": { "card_number": { "pattern": "^[0-9]{13,19}$" } } }
        },
        {
          "if": { "properties": { "client_side_encryption": { "enum": [ false ] }, "recurring_type": { "enum": [false, "initial", "managed"] } } },
          "then": { "properties": { "expiration_month": { "pattern": "^(0?[1-9]|1[012])$" } } }
        },
        {
          "if": { "properties": { "client_side_encryption": { "enum": [ false ] }, "recurring_type": { "enum": [false, "initial", "managed"] } } },
          "then": { "properties": { "expiration_year": { "pattern": "^(20)\\d{2}$" } } }
        },
        {
          "if": { "properties": { "client_side_encryption": { "enum": [ false ] }, "recurring_type": { "enum": [false, "initial", "managed"] } } },
          "then": { "properties": { "cvv": { "pattern": "^[0-9]{3,4}$"} } }
        },
        {
          "if": { "properties": { "token": { "const": false }, "recurring_type": { "enum": [false, "initial", "managed"] } } },
          "then": { "required": ["card_holder", "card_number", "expiration_year", "expiration_month", "cvv", "currency"] }
        }
      ]
    },
    "reference": {
      "$id": "#reference",
      "properties": {
        "transaction_id": {
          "$ref": "#transaction_id"
        },
        "remote_ip": {
          "$ref": "#remote_ip"
        },
        "usage": {
          "$ref": "#usage"
        },
        "reference_id": {
          "$id": "#reference_id",
          "type": "string",
          "description": "Unique id returned by corresponding transaction"
        }
      }
    },
    "bank": {
      "$id": "#bank",
      "properties": {
        "iban": {
          "type": "string",
          "maxLength": 34,
          "pattern": "^[A-Z]{2}.*$"
        },
        "bic": {
          "type": "string",
          "minLength": 8,
          "maxLength": 11
        }
      }
    },
    "url": {
      "$id": "#url",
      "type": "string",
      "format": "url"
    },
    "date": {
      "$id": "#date-dd-mm-yyyy",
      "type": "string",
      "pattern": "^(3[01]|[12][0-9]|0[1-9])-(1[0-2]|0[1-9])-[0-9]{4}$",
      "message": "Should match dd-mm-yyyy"
    },
    "initial_managed_recurring": {
      "$id": "#initial_managed_recurring",
      "type": "string",
      "enum": ["initial", "managed"]
    },
    "subsequent_managed_recurring": {
      "$id": "#subsequent_managed_recurring",
      "type": "string",
      "enum": ["subsequent"]
    },
    "date_iso_8601_format": {
      "$id": "#date-yyyy-mm-dd",
      "type": "string",
      "pattern": "^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$",
      "message": "Should match yyyy-mm-dd"
    },
    "use_smart_router": {
      "$id": "#use_smart_router",
      "type": "boolean",
      "description": "Force Smart Router endpoint for Financial transactions"
    },
    "consumer_reference": {
      "$id": "#consumer_reference",
      "maxLength": 20,
      "description": "Consumer reference is a unique consumer identifier"
    },
    "national_id": {
      "$id": "#national_id",
      "maxLength": 20,
      "description": "National Identifier number of the customer"
    }
  }
}
